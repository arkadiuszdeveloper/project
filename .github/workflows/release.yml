name: Deploy Web App

on:
  push:
    branches:
      - 'dev'
      - 'main'

  pull_request:
    branches:
      - 'dev'
      - 'main'

jobs:
  ssh-test:
    runs-on: ubuntu-latest
    steps:
    - name: SSH Key
      run: install -m 600 /dev/null /tmp/private.key && echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/private.key

    - name: SSH Test
      run: ssh -t -i /tmp/private.key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${{ secrets.SSH_CONNECTION_STRING }} uname

    - name: SSH Remove Key
      run: rm /tmp/private.key

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: ssh-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: SSH Key
      run: install -m 600 /dev/null /tmp/private.key && echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/private.key

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image and Import on Remote Server
      run: |
        docker buildx create --use
        docker buildx inspect --bootstrap
        docker buildx build --output type=tar -t app-frontend:latest ./frontend | ssh -t -i /tmp/private.key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${{ secrets.SSH_CONNECTION_STRING }} "docker import - app-frontend:latest"

    - name: SSH Remove Key
      run: rm /tmp/private.key

  deploy-backend:
    runs-on: ubuntu-latest
    needs: ssh-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: SSH Key
      run: install -m 600 /dev/null /tmp/private.key && echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/private.key

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image and Import on Remote Server
      run: |
        docker buildx create --use
        docker buildx inspect --bootstrap
        docker buildx build --output type=tar -t app-backend:latest ./backend | ssh -vvv -t -i /tmp/private.key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${{ secrets.SSH_CONNECTION_STRING }} "docker import - app-backend:latest"

    - name: SSH Remove Key
      run: rm /tmp/private.key

  restart-server:
    runs-on: ubuntu-latest
    needs:
    - ssh-test
    - deploy-frontend
    - deploy-backend
    steps:
    - name: SSH Key
      run: install -m 600 /dev/null /tmp/private.key && echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/private.key

    - name: Update Docker compose
      run: |
        ssh -t -i /tmp/private.key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${{ secrets.SSH_CONNECTION_STRING }} "/srv/deploy/docker-compose.py /srv/deploy/docker-compose.yml app-backend latest"
        ssh -t -i /tmp/private.key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${{ secrets.SSH_CONNECTION_STRING }} "/srv/deploy/docker-compose.py /srv/deploy/docker-compose.yml app-frontend latest"

    - name: Restart Docker compose
      run: |
        ssh -t -i /tmp/private.key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ${{ secrets.SSH_CONNECTION_STRING }} "docker compose -f /srv/deploy/docker-compose.yml up -d"

    - name: SSH Remove Key
      run: rm /tmp/private.key
